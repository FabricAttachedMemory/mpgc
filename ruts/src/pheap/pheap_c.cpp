/*
 *
 *  Multi Process Garbage Collector
 *  Copyright Â© 2016 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the 
 *  Application containing code generated by the Library and added to the 
 *  Application during this compilation process under terms of your choice, 
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

/*

 *
 *  Created on: Sep 24, 2013
 *      Author: evank
 */
#include "pheap/pheap_c.h"
#include "pheap_impl.h"
#include <cassert>

using namespace pheap;

namespace {
	persistent_heap *heap = nullptr;

	persistent_heap &the_heap() {
		assert(heap != nullptr);
		return *heap;
	}
}

void pheap_init(const char *const heapfile) {
	assert(heap == nullptr);
	heap = new persistent_heap(heapfile);
}

int pheap_ready() {
	return heap != nullptr;
}

void *pheap_malloc(size_t size) {
	return the_heap().allocate(size);
}

void pheap_free(void *ptr) {
	the_heap().deallocate(ptr);
}

void *pheap_get_root() {
	return persistent_root<void>(the_heap());
}

void pheap_set_root(void *root) {
	persistent_root<void> r(the_heap());
	r = root;
}

void pheap_sync() {
	the_heap().sync();
}







