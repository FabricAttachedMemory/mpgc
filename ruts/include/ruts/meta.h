/*
 *
 *  Multi Process Garbage Collector
 *  Copyright Â© 2016 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the 
 *  Application containing code generated by the Library and added to the 
 *  Application during this compilation process under terms of your choice, 
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

/*
 * meta.h
 *
 *  Created on: Oct 6, 2013
 *      Author: evank
 */

#ifndef META_H_
#define META_H_

#include <type_traits>

namespace meta {

  template <typename A, typename T>
  using rebind_alloc_t = typename A::template rebind<T>::other;

  template <bool b> class exists_if;
  template <> class exists_if<true> {};

  template <typename T>
  struct is_iterator {
    template <typename U>
    static char set(typename std::iterator_traits<U>::pointer* x);

    template <typename U>
    static long test(U* x);
    
    constexpr static bool value = std::is_same<decltype(test<std::decay_t<T>>(nullptr)), char>::value;
  };
      
  
}





#endif /* META_H_ */
